---
import MainLayout from '../../../layouts/MainLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const songs = await getCollection('songs');
  return songs.map((song) => ({
    params: {
      lang: song.id.split('/')[0], // Extracts 'en'
      slug: song.id.split('/').slice(1).join('/'), // Extracts 'twinkle-twinkle'
    },
    props: { song },
  }));
}

const { song } = Astro.props;
const { Content } = await song.render();
---

<MainLayout title={song.data.title + " - Song - Whispora.space"} description={`Lyrics and audio for ${song.data.title}`}>
  <article class="container-custom py-16">
    <header class="text-center mb-10">
      <h1 class="text-4xl md:text-5xl font-extrabold text-gray-800 mb-4">{song.data.title}</h1>
      {song.data.artist && <p class="text-lg text-gray-600 italic">By {song.data.artist}</p>}
      
      {/* Audio Player (simple HTML5) */}
      {song.data.audio && (
        <div class="mt-6">
          <audio controls class="w-full max-w-md mx-auto">
            <source src={song.data.audio} type="audio/mpeg">
            Your browser does not support the audio element.
          </audio>
        </div>
      )}
    </header>

    {/* Lyrics or Song Description */}
    <div class="prose prose-lg mx-auto text-gray-700 leading-relaxed space-y-4 md:prose-xl">
      {song.data.lyrics ? (
        <Content /> // If 'lyrics: true', render Markdown as lyrics
      ) : (
        <p class="text-center">No lyrics available for this song.</p> // Or render a different template for non-lyric songs
      )}
    </div>

    <div class="text-center mt-12">
      <a href={`/${Astro.params.lang}/songs`} class="inline-block bg-blue-600 text-white px-6 py-3 rounded-full text-lg font-semibold hover:bg-blue-700 transition-colors">
        &larr; Back to All Songs
      </a>
    </div>
  </article>
</MainLayout>
